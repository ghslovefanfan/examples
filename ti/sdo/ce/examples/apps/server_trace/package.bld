/* 
 *  Copyright 2008
 *  Texas Instruments Incorporated
 *
 *  All rights reserved.  Property of Texas Instruments Incorporated
 *  Restricted rights to use, duplicate or disclose this code are
 *  granted through contract.
 * 
 */

/*
 *  ======== package.bld ========
 */

var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');

/* when constructing a release, release everything */
Pkg.attrs.exportAll = true;

// Uncomment this to build debug binaries
//Pkg.attrs.profile = "debug";

/* This script (and others) use the common table defined in this file. */
utils.importFile("ti/sdo/ce/examples/buildutils/platformTbl.bld");

for (var i = 0; i < Build.targets.length; i++) {
    var targ = Build.targets[i];
    var targPlatforms = buildPlatforms[targ.name];

    for (var j = 0; j < targPlatforms.length; j++) {
        var platform = targPlatforms[j];
        var platName = platform.platform;

        if (targ.name.match("MVArm9") || targ.name.match("UCArm9")) {
            /* target which supports "remote" algorithms */
            addExe("trace", targ, platName, "remote");

            print("building for "+platName +", "+targ.name+" target ...");
        }
    }
}

/*
 *  ======== addExe ========
 */
function addExe(name, targ, platform, cfg)
{
    // if platform is null, use the target's default platform
    var plat = (platform == null) ? targ.platform : "ti.platforms." + platform;

    // Get the platform name minus the "ti.platforms" prefix
    var idx = plat.lastIndexOf('.');
    var platShort = plat.substr(idx + 1);

    var srcs = [name + ".c"];
    srcs.push("main_native.c");
    suffix = ".cfg";

    Pkg.addExecutable(platShort + '/' + name + '_' + cfg, targ, plat, {
        cfgScript: cfg + suffix,
        cfgArgs: "{platform: \"" + plat + "\"}",
    }).addObjects(srcs);
}
/*
 *  @(#) ti.sdo.ce.examples.apps.server_trace; 1,0,0,89; 9-9-2008 02:01:09; /db/atree/library/trees/ce-h27x/src/
 */

